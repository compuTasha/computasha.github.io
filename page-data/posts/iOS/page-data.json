{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/iOS",
    "result": {"pageContext":{"currentCategory":"iOS","categories":["All","etc.","Android","AWS","CS","iOS","UX/UI"],"edges":[{"node":{"id":"0a0a83b8-4465-5345-be73-774f5a5d274f","excerpt":"디자인 패턴은 특정한 상황에서 반복적으로 일어나는 일반적인 문제를 해결하기 위한 일종의 템플릿이다. 디자인 패턴을 잘 활용하면, 앱의 코드를 모듈화할 수 있고  버그 수정과 변경이 더 쉬워진다. 그중에서도 오늘 살펴볼 디자인 패턴은 MVC 패턴이다. (오리지널 MVC 패턴이 아닌 애플이 발표한 Cocoa MVC 패턴..! = 요즘 말하는 MVC 패턴) 🤳🏻 Model-View-Controller (MVC) 현재 Cocoa Touch 개발에서 가장 많이 사용되는 디자인 패턴이다. 이 디자인 패턴은 앱 내의 모든 오브젝트가 Model, View, Controller 중 하나의 역할을 맡아 수행하도록 한다. 그리고 이렇게 같은 역할을 하는 오브젝트들을 모아서 레이어라고 부른다. 👪 MVC 레이어의 역할과 관계 우선 각 레이어의 역할을 살펴보자 다음은 레이어 간의 상호 작용을 보여주는 다이어그램이다.  MVC 디자인 패턴은 코드를 Model, View, Controller 중 하나로 구분한…","fields":{"slug":"/iOS-MVC/"},"frontmatter":{"categories":"iOS","title":"MVC 디자인 패턴","date":"January 24, 2022"}},"next":{"fields":{"slug":"/CS-cpu-core-thread/"}},"previous":{"fields":{"slug":"/AWS-seminar/"}}},{"node":{"id":"4e7b46a6-5453-588e-a861-c0790f943e11","excerpt":"기본기 탄탄한 iOS 개발자로 성장하기 LEEO 님의 블로그와 iOS 개발 로드맵을 참고해서 만든 성장 로드맵 💻 기본 역량 자료구조 & 알고리즘 기본적인 터미널 사용법 Git - 버전 관리 SSH HTTP / HTTPs 그리고 API 검색 기술 문자열 인코딩 오픈소스 🤨 Basic Swift 기본문법 Collections ControlFlow(while, for, iterating collection, nested loop) Optional Guard Object Oriented Programing Closures enum Properties & Methods Stored Properties Computed Properties Lazy Properties Computed Properties or Methods? Inheritance Initializers Protocols & Extensions Value vs Reference Types Self Xcode IDE iOS kno…","fields":{"slug":"/iOS-roadmap/"},"frontmatter":{"categories":"iOS","title":"iOS 개발 로드맵 따라가기","date":"January 21, 2022"}},"next":{"fields":{"slug":"/UX-Jacobs-Law/"}},"previous":{"fields":{"slug":"/CS-cpu-core-thread/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}